AWSTemplateFormatVersion: "2010-09-09"
Description: AWS template for the Postgres RDS

Parameters:
  Envrinment:
    Description: 'Select environment'
    Type: String
    AllowedValues: ["dev", "qa", "preprod", "prod"]
  SubnetId1:
    Description: 'SubnetId 1'
    Type: String
    Default: 'subnet-0d060fd5ca130d1f4'
  SubnetId2:
    Description: 'SubnetId 1'
    Type: String
    Default: 'subnet-08fe16dabde710c2c'
  VpcId:
    Description: 'VPC Id'
    Type: String
    Default: 'vpc-0584699bf4c05750f'
  VpcCidr:
    Description: 'VPC CIDR'
    Type: String
    Default: '172.31.0.0/16'
  DBSnapshotIdentifier:
    Description: 'Optional name or Amazon Resource Name (ARN) of the DB snapshot from which you want to restore (leave blank to create an empty database).'
    Type: String
    Default: ''
  DBAllocatedStorage:
    Description: 'The allocated storage size, specified in GB (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: Number
    Default: 5
    MinValue: 5
    MaxValue: 16384
  DBInstanceClass:
    Description: 'The instance type of database server.'
    Type: String
    Default: 'db.t2.micro'
  DBName:
    Description: 'Name of the database (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: String
    Default: ''
  DBBackupRetentionPeriod:
    Description: 'The number of days to keep snapshots of the database.'
    Type: Number
    MinValue: 0
    MaxValue: 35
    Default: 30
  DBMasterUsername:
    Description: 'The master user name for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot).'
    Type: String
    Default: master
  DBMasterUserPassword:
    Description: 'The master password for the DB instance (ignored when DBSnapshotIdentifier is set, value used from snapshot. Also ignored when ParentSecretStack is used).'
    Type: String
    NoEcho: true
    Default: ''
  DBMultiAZ:
    Description: 'Specifies if the database instance is deployed to multiple Availability Zones for HA.'
    Type: String
    Default: false
    AllowedValues: [true, false]
  DBOptionGroupName:
    Description: 'Optional name of an existing DB option group.'
    Type: String
    Default: ''
  DBParameterGroupName:
    Description: 'Optional name of an existing DB parameter group.'
    Type: String
    Default: ''
  SubDomainNameWithDot:
    Description: 'Name that is used to create the DNS entry with trailing dot, e.g. ยง{SubDomainNameWithDot}ยง{HostedZoneName}. Leave blank for naked (or apex and bare) domain. Requires ParentZoneStack parameter!'
    Type: String
    Default: 'postgres.'
  PreferredBackupWindow:
    Description: 'The daily time range in UTC during which you want to create automated backups.'
    Type: String
    Default: '09:54-10:24'
  PreferredMaintenanceWindow:
    Description: The weekly time range (in UTC) during which system maintenance can occur.
    Type: String
    Default: 'sat:07:00-sat:07:30'
  EngineVersion:
    Description: 'PostgreSQL version.'
    Type: String
    AllowedValues: ['15.3', '15.2', '14.8', '14.7', '14.4', '14.3', '13.11', '13.10', '13.7', '12.15', '12.14', '12.11', '11.20', '11.19', '11.16'] # aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"
  EnableIAMDatabaseAuthentication:
    Description: 'Enable mapping of AWS Identity and Access Management (IAM) accounts to database accounts (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html).'
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'

Resources:
  SubnetGroups:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub 'RDS-Subnet-Group-Postgres-${Envrinment}'
      DBSubnetGroupName: !Sub 'RDS-Subnet-Group-Postgres-${Envrinment}'
      SubnetIds: 
        - !Ref SubnetId1
        - !Ref SubnetId2

  RDSSecurityGroup:      
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress: 
        - Ingress
      EC2VpcId: String
      GroupDescription: String
      # Tags: 
      #   - Tag

  RDSDBInstanceParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      DBParameterGroupName: !Sub 'RDS-Paramer-Group-Postgres-${Envrinment}'
      Description: !Sub 'RDS-Paramer-Group-Postgres-${Envrinment}'
      Family: 'postgres14'
      # Parameters: Json

  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'RDS-securitygroup-${Envrinment}'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: !Ref VpcCidr
  DatabaseSecurityGroupInSSHBastion:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'Bastion-host-securitygroup-${Envrinment}'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref VpcCidr